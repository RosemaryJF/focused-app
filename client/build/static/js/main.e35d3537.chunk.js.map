{"version":3,"sources":["assets/images/icon.png","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/DayForm/index.js","components/Day/index.js","components/DayList/index.js","components/Nav/index.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Home","Card","className","bg","Body","src","logo","alt","style","width","height","marginBottom","Title","Button","href","variant","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","id","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","onChange","Text","to","Signup","addUser","firstName","lastName","DayForm","crag","setCrag","climb","setClimb","focus","setFocus","attemptsInput","setattemptsInput","restInput","setrestInput","betaInput","setbetaInput","notesInput","setnotesInput","focusChoice","handleSubmit","e","Math","random","floor","attempts","rests","beta","notes","edit","Select","onClick","Day","setEdit","day","editDayItem","map","i","isComplete","fpcus","completeDay","text","deleteDay","DayList","days","setDays","newDay","updatedDays","filter","editDay","dayId","newFocus","prev","showNavigation","loggedIn","Navbar","sticky","expand","Brand","Toggle","Collapse","Nav","Link","logout","Profile","backgroundColor","Container","lg","borderRadius","md","borderTopLeftRadius","borderBottomLeftRadius","size","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e35d3537.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.12d7f8b2.png\";","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport logo from '../assets/images/icon.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Card\r\n      className='position-absolute top-50 start-50 translate-middle'\r\n      bg={'custom-color-700-lght'}\r\n    >\r\n      <Card.Body>\r\n        <img src={logo} alt=\"Focused Logo\" style={{ width: '200px', height: '200px', marginBottom: '10px' }} />\r\n        <Card.Title>FOCUSED</Card.Title>\r\n        <Button href=\"/login\" variant=\"outline-secondary\">\r\n          LOGIN\r\n        </Button>\r\n        <Button href=\"/signup\" variant=\"outline-secondary\">\r\n          SIGN UP\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_DAY = gql`\r\n  mutation addDay(\r\n    $user: ID!\r\n    $dayDate: Day\r\n    $climb: ID!\r\n    $focus: String!\r\n    $attempts: Number!\r\n    $rests: Number\r\n    $beta: String!\r\n    $notes: String!\r\n  ) {\r\n    addDay(\r\n      user: $user\r\n      # dayDate\r\n      climb: $climb\r\n      crag: $crag\r\n      focus: $focus\r\n      attempts: $attempts\r\n      rests: $rests\r\n      beta: $beta\r\n      notes: $notes\r\n    )\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nimport logo from '../assets/images/icon.png';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (event) {\r\n      console.log(event);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"justify-content-evenly text-center\" id=\"loginForm\">\r\n      <img src={logo} alt=\"Focused Logo\" style={{ width: '200px', height: '200px', marginBottom: '10px' }} />\r\n      <h2>Login</h2>\r\n      <Form className=\"container-sm\" onSubmit={handleFormSubmit}>\r\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"formLoginEmail\">\r\n          <Form.Label column sm={2}>Email address:</Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"youremail@gmail.com\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange} />\r\n          </Col>\r\n          <Form.Text className=\"text-muted justify-content-start\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"formLoginPassword\">\r\n          <Form.Label column sm={2}>Password:</Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"********\"\r\n              onChange={handleChange} />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <Button variant=\"outline-secondary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n\r\n      Don't have an account? <Link to=\"/signup\"> Signup Here</Link>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport logo from '../assets/images/icon.png';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"justify-content-evenly text-center\" id=\"signupForm\">\r\n      <img src={logo} alt=\"Focused Logo\" style={{ width: '200px', height: '200px', marginBottom: '10px' }} />\r\n      <h2>Signup</h2>\r\n      <Form className=\"container-sm\" onSubmit={handleFormSubmit}>\r\n        <Form.Group as={Row} className=\"mb-3\" controlId='formSignupEmail'>\r\n          <Form.Label column sm={2}>\r\n            First Name:\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              placeholder=\"First Name\"\r\n              name=\"firstName\"\r\n              type=\"firstName\"\r\n              id=\"firstName\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} className=\"mb-3\">\r\n          <Form.Label column sm={2}>Last Name:</Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              placeholder=\"Last\"\r\n              name=\"lastName\"\r\n              type=\"lastName\"\r\n              id=\"lastName\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} className=\"mb-3\">\r\n          <Form.Label column sm={2}>Email:</Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              placeholder=\"youremail@test.com\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} className=\"mb-3\">\r\n          <Form.Label column sm={2}>Password:</Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control\r\n              placeholder=\"******\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"pwd\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"outline-secondary\" type=\"submit\">Submit</Button>\r\n      </Form>\r\n      Already have an account ? <Link to=\"/login\">Login Here</Link>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n// import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Option from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction DayForm(props) {\r\n  const [crag, setCrag] = useState('');\r\n  const [climb, setClimb] = useState('');\r\n  let [focus, setFocus] = useState('');\r\n  const [attemptsInput, setattemptsInput] = useState('');\r\n  const [restInput, setrestInput] = useState('');\r\n  const [betaInput, setbetaInput] = useState('');\r\n  const [notesInput, setnotesInput] = useState('');\r\n\r\n  const focusChoice = [\r\n    'Onsight',\r\n    'Beta Puzzle',\r\n    'Flash',\r\n    'Red Point',\r\n    'Pink Point',\r\n    'Dogged',\r\n    'Top Rope',\r\n    'Winging It']\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!focus) {\r\n      focus = 'Winging It';\r\n    }\r\n\r\n    props.onSubmit({\r\n      id: Math.random(Math.floor() * 1000),\r\n      // dayDate: dayDate,\r\n      crag: crag,\r\n      climb: climb,\r\n      focus: focus,\r\n      attempts: attemptsInput,\r\n      rests: restInput,\r\n      beta: betaInput,\r\n      notes: notesInput\r\n    });\r\n\r\n    setCrag('');\r\n    setClimb('');\r\n    setFocus('');\r\n    setattemptsInput('');\r\n    setrestInput('');\r\n    setbetaInput('');\r\n    setnotesInput('');\r\n\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCrag(e.target.value)\r\n    setClimb(e.target.value)\r\n    setattemptsInput(e.target.value)\r\n    setrestInput(e.target.value)\r\n    setbetaInput(e.target.value)\r\n    setnotesInput(e.target.value)\r\n  };\r\n\r\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\r\n  // If the prop \"edit\" exists, we know to render the update form instead\r\n  return !props.edit ? (\r\n    <div>\r\n      <Form className=\"justify-content-evenly text-center day-form\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"formAddDay\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Choose your crag\"\r\n            value={crag}\r\n            name=\"text\"\r\n            className=\"crag-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Choose the climb\"\r\n            value={climb}\r\n            name=\"text\"\r\n            className=\"climb-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Select className=\"focus-dropdown\" aria-label='focus choice select'>\r\n            <Option>Choose your focus</Option>\r\n            <Option onClick={() => setFocus(focusChoice[0])}>Onsight</Option>\r\n            <Option onClick={() => setFocus(focusChoice[1])}>Beta Puzzle</Option>\r\n            <Option onClick={() => setFocus(focusChoice[2])}>Flash</Option>\r\n            <Option onClick={() => setFocus(focusChoice[3])}>Red Point</Option>\r\n            <Option onClick={() => setFocus(focusChoice[4])}>Pink Point</Option>\r\n            <Option onClick={() => setFocus(focusChoice[5])}>Dogged</Option>\r\n            <Option onClick={() => setFocus(focusChoice[6])}>Top Rope</Option>\r\n            <Option onClick={() => setFocus(focusChoice[7])}>Winging It</Option>\r\n          </Form.Select>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"How many attempts did you have?\"\r\n            value={attemptsInput}\r\n            name=\"text\"\r\n            className=\"attempts-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"How many (if any) rests did you take between attempts?\"\r\n            value={restInput}\r\n            name=\"text\"\r\n            className=\"rest-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"What was your beta?\"\r\n            value={betaInput}\r\n            name=\"text\"\r\n            className=\"beta-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Add any notes you want to jot down here\"\r\n            value={notesInput}\r\n            name=\"text\"\r\n            className=\"notes-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Button className=\"day-button\" variant=\"outline-secondary\" type=\"submit\">\r\n            Add day\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Form className=\"justify-content-evenly text-center day-form\" onSubmit={handleSubmit}>\r\n        <h3>Update day: {props.edit.value}</h3>\r\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"formUpdateDay\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            value={crag}\r\n            name=\"text\"\r\n            className=\"crag-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            value={climb}\r\n            name=\"text\"\r\n            className=\"climb-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Select className=\"focus-dropdown\" aria-label='focus choice select'>\r\n            <Option>Choose your focus</Option>\r\n            <Option onClick={() => setFocus(focusChoice[0])}>Onsight</Option>\r\n            <Option onClick={() => setFocus(focusChoice[1])}>Beta Puzzle</Option>\r\n            <Option onClick={() => setFocus(focusChoice[2])}>Flash</Option>\r\n            <Option onClick={() => setFocus(focusChoice[3])}>Red Point</Option>\r\n            <Option onClick={() => setFocus(focusChoice[4])}>Pink Point</Option>\r\n            <Option onClick={() => setFocus(focusChoice[5])}>Dogged</Option>\r\n            <Option onClick={() => setFocus(focusChoice[6])}>Top Rope</Option>\r\n            <Option onClick={() => setFocus(focusChoice[7])}>Winging It</Option>\r\n          </Form.Select>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            value={attemptsInput}\r\n            name=\"text\"\r\n            className=\"attempts-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            value={restInput}\r\n            name=\"text\"\r\n            className=\"rest-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            value={betaInput}\r\n            name=\"text\"\r\n            className=\"beta-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={props.edit.value}\r\n            name=\"text\"\r\n            className=\"notes-input\"\r\n            onChange={handleChange}\r\n          ></Form.Control>\r\n          <Button className=\"day-button\" variant=\"outline-secondary\" type=\"submit\">\r\n            Update day\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayForm;\r\n","import React, { useState } from 'react';\r\nimport DayForm from '../DayForm';\r\n\r\nfunction Day(props) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    crag: '',\r\n    climb: '',\r\n    focus: '',\r\n    attempts: '',\r\n    rests: '',\r\n    beta: '',\r\n    notes: '',\r\n  });\r\n\r\n  console.log(props.day);\r\n\r\n  const submitUpdate = (value) => {\r\n    props.editDayItem(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      crag: '',\r\n      climb: '',\r\n      focus: '',\r\n      attempts: '',\r\n      rests: '',\r\n      beta: '',\r\n      notes: '',\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <DayForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return props.day.map((day, i) => (\r\n    <div\r\n      className={\r\n        day.isComplete\r\n          ? `day-row complete ${day.focus}`\r\n          : `day-row ${day.fpcus}`\r\n      }\r\n      key={i}\r\n    >\r\n      <div key={day.id} onClick={() => props.completeDay(day.id)}>\r\n        {day.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        {console.log(day)}\r\n        <p onClick={() => setEdit({ id: day.id, climb: day.climb.name, focus: day.focus })}> ✏️</p>\r\n        <p onClick={() => props.deleteDay(day.id)}> 🗑️</p>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Day;\r\n\r\n","import React, { useState } from 'react';\r\nimport DayForm from '../DayForm';\r\nimport Day from '../Day';\r\n\r\nfunction DayList() {\r\n  const [days, setDays] = useState([]);\r\n\r\n  // Function to add a day\r\n  const addDay = (day) => {\r\n    console.log(\r\n      day\r\n    );\r\n    // Check to see if the item text is empty\r\n    if (!day.climb) {\r\n      return;\r\n    }\r\n\r\n    // Add the new bucket list item to the existing array of objects\r\n    const newDay = [day, ...days];\r\n    console.log(newDay);\r\n\r\n    // Call setBucket to update state with our new set of bucket list items\r\n    setDays(newDay);\r\n  };\r\n\r\n  // Function to mark day as complete\r\n  const completeDay = (id) => {\r\n    // If the ID passed to this function matches the ID of the item that was clicked, mark it as complete\r\n    let updatedDays = days.map((day) => {\r\n      if (day.id === id) {\r\n        day.isComplete = !day.isComplete;\r\n      }\r\n      return day;\r\n    });\r\n\r\n    console.log(updatedDays);\r\n    setDays(updatedDays);\r\n  };\r\n\r\n  // Function to remove day and update state\r\n  const deleteDay = (id) => {\r\n    const updatedDays = [...days].filter((day) => day.id !== day);\r\n\r\n    setDays(updatedDays);\r\n  };\r\n\r\n  // Function to edit the bucket list item\r\n  const editDay = (dayId, newFocus) => {\r\n    // Make sure that the Focus isn't empty\r\n    if (!newFocus.text) {\r\n      return;\r\n    }\r\n\r\n    // We use the \"prev\" argument provided with the useState hook to map through our list of items\r\n    // We then check to see if the item ID matches the if of the item that was clicked and if so we set it to a new value\r\n    setDays((prev) =>\r\n      prev.map((day) => (day.id === dayId ? newFocus : day))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>What days have you got?</h1>\r\n      <DayForm onSubmit={addDay} />\r\n      <Day\r\n        days={days}\r\n        completeDay={completeDay}\r\n        deleteDay={deleteDay}\r\n        editDay={editDay}\r\n      ></Day>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayList;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nfunction showNavigation() {\r\n  if (Auth.loggedIn()) {\r\n    return (\r\n      <Navbar className=\"navbar-transparent\" sticky=\"top\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">FOCUSED</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n        <Nav.Link href=\"/days\">\r\n          Days\r\n        </Nav.Link>\r\n        <Nav.Link href=\"/\" onClick={() => Auth.logout()}>\r\n          {/* this is not using the Link component to logout the user and then refresh the application to the start */}\r\n          Logout\r\n        </Nav.Link>\r\n      </Navbar>\r\n    );\r\n  } else {\r\n    return (\r\n      <Navbar className=\"navbar-transparent\" sticky=\"top\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">FOCUSED</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n        <Nav.Link href=\"/signup\">\r\n          Signup\r\n        </Nav.Link>\r\n        <Nav.Link href=\"/login\" variant=\"outline-secondary\">\r\n          Login\r\n        </Nav.Link>\r\n      </Navbar>\r\n    );\r\n  }\r\n};\r\n// return (\r\n//   <header className=\"flex-row px-1\">\r\n//     <h1 >\r\n//       <Link to=\"/\">\r\n//         FOCUSED\r\n//       </Link>\r\n//     </h1>\r\n\r\n//     <nav>\r\n//       {showNavigation()}\r\n//     </nav>\r\n//   </header>\r\n// );\r\n\r\n\r\nexport default showNavigation;\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport DayList from '../components/DayList';\r\nimport Nav from '../components/Nav';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className=\"vh-100\" style={{ backgroundColor: '#f4f5f7' }}>\r\n      <Nav />\r\n      <Container className=\"py-5 h-100\">\r\n        <Row className=\"justify-content-center align-items-center h-100\">\r\n          <Col lg=\"6\" className=\"mb-4 mb-lg-0\">\r\n            <Card className=\"mb-3\" style={{ borderRadius: '.5rem' }}>\r\n              <Row className=\"g-0\">\r\n                <Col md=\"4\" className=\"gradient-custom text-center text-white\"\r\n                  style={{ borderTopLeftRadius: '.5rem', borderBottomLeftRadius: '.5rem' }}>\r\n                  <h3 id=\"userName\">Marie Horwitz</h3>\r\n                  <Card.Text>Web Designer</Card.Text>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                  <Card.Body className=\"p-4\">\r\n                    <h6>Days</h6>\r\n                    <Row className=\"pt-1 days-list\">\r\n                      <DayList />\r\n                    </Row>\r\n                    <h6>Information</h6>\r\n                    <hr className=\"mt-0 mb-4\" />\r\n                    <Row className=\"pt-1\">\r\n                      <Col size=\"6\" className=\"mb-3\">\r\n                        <h6>Email</h6>\r\n                        <Card.Text className=\"text-muted\">info@example.com</Card.Text>\r\n                      </Col>\r\n                      <Col size=\"6\" className=\"mb-3\">\r\n                        <h6>Phone</h6>\r\n                        <Card.Text className=\"text-muted\">123 456 789</Card.Text>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Profile from './pages/Profile';\r\n// import Nav from './components/Nav';\r\n// import Detail from './pages/Detail';\r\n// import NoMatch from './pages/NoMatch';\r\n// import { StoreProvider } from './utils/GlobalState';\r\n// import Success from './pages/Success';\r\n// import OrderHistory from './pages/OrderHistory';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={<Home />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              element={<Login />}\r\n            />\r\n            <Route\r\n              path=\"/signup\"\r\n              element={<Signup />}\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              element={<Profile />}\r\n            />\r\n            {/* <Route\r\n                path=\"/orderHistory\"\r\n                element={<OrderHistory />}\r\n              />\r\n              <Route\r\n                path=\"/products/:id\"\r\n                element={<Detail />}\r\n              />\r\n              <Route\r\n                path=\"*\"\r\n                element={<NoMatch />}\r\n              /> */}\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './custom.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// This enables the app to run offline and load faster. It can be changed to\r\n// unregister() below. Note; register() comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}